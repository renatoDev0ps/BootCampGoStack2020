O que é React?

* Biblioteca para construção de interfaces;
* Utilizado na construçãp de Single-Page Applications;
* Podemos chamar o React de Framework? Sim. É um conjunto de ferramentas.
* Tudo fica dentro do Javascript;
* React / ReactJS / React Native;

Vantagens

* Oeganização do código;
  * Componentização;
* Divisão de responsabilidades;
  * Back-end: Regra de negócios;
  * Front-end: Interface;
* Uma API, múltiplos clientes;
* Prgramação declarativa;

JSX

* Escrever HTML dentro do Javascript;
* Com React podemos criar nossos prórios elementos;

Programação Imperativa VS declarativa;

Babel / Webpack

* O browser não entende todo esse código react;
* O Babel converte o código JS de uma forma que o browser entenda;
* O Webpack possui várias funções;
  * Criação do Bundle, arquivo com todo código da aplicação;
  * Ensina ao Javascript como importar arquivos CSS, imagens e etc;
  * Live Reload com Webpack Dev Server;

Conceitos importantes do React
* Propriedade
* component
* Estado & Imutabilidade

* O useState retorna um array com 2 posições
  * Na primeira posiçõa retorna a variável com seu valor inicial
  * Na segunda posição retorna uma função para alterar o valor da variável

* useEffect é utilizada para disparar funções quando tiver alguma informação 
alterada ou não assim que o componente for exibido em tela
* o useEffect recebe dois parametros:
  * o primeiro é uma função que irá execura um bloco de instrução assim que o componente carregar
  * o segurndo é um array:
    * se estiver vazio vai excutar a função somente quando o componente for carregado
    * se receber parâmetros, vai excutar toda vez que esse parâmetro for modificado